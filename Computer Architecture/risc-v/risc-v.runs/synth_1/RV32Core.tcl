# 
# Synthesis run script generated by Vivado
# 

proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
create_project -in_memory -part xc7a12ticsg325-1L

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_property webtalk.parent_dir {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.cache/wt} [current_project]
set_property parent.project_path {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.xpr} [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language Verilog [current_project]
set_property ip_output_repo {d:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.cache/ip} [current_project]
set_property ip_cache_permissions {read write} [current_project]
read_verilog -library xil_defaultlib {
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/Parameters.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/ALU.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/BranchDecisionMaking.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/ControlUnit.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/DataExt.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/BRAMModule/DataRam.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/EXSegReg.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/HarzardUnit.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/IDSegReg.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/IFSegReg.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/ImmOperandUnit.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/BRAMModule/InstructionRam.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/MEMSegReg.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/NPC_Generator.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/RegisterFile.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/WBSegReg.v}
  {D:/Documents/Programs/UnderGraduate_Programs/Computer Architecture/risc-v/risc-v.srcs/sources_1/imports/Computer Architecture/RV32Core.v}
}
# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}

synth_design -top RV32Core -part xc7a12ticsg325-1L


# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef RV32Core.dcp
create_report "synth_1_synth_report_utilization_0" "report_utilization -file RV32Core_utilization_synth.rpt -pb RV32Core_utilization_synth.pb"
